\title{可預測與不可預測}
\author{fizzyelt}

\p{「\b{可預測}」意味着不論在何時何地，我們提供相同的輸入時，都能夠獲得相同的輸出，換句話說我們不必作任何實際測試就能預先推斷結果。}

\p{舉例來說，對於邏輯運算中的 \code{not} 運算而言，無論在何種情境下，只要我們提供 \code{false} 作為輸入，我們都能預先認定推斷都必定為 \code{true}。}

\p{如果一個函數\b{不可預測}，當提供相同的輸入時可能會得到不同的結果，即使我們知道在特定情境和時間下它可能會產生某個結果，但一旦改變環境或執行時間，這個函數就不能再被信任。}

\p{在進行單元測試之前，我們能透過分析就能夠列出該函數的所有可能輸入和對應輸出情況，這在某種程度上意味著該函數是可預測的。而純函數本身就具備\b{可預測性}，所以一個程式內的純函數佔比越多，我們維護非純函數所需付出的成本就相對降低。}

\p{需要注意的是，當機器或語言本身提供錯誤的值或出現意外情況，導致函數執行不符合預期，這通常被視為不可控制的因素，不在我們的討論範圍內。}
